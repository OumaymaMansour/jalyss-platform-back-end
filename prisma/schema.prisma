generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  media    Media?  @relation(fields: [mediaId], references: [id])
  mediaId  String?
}

model Employee {
  id          Int     @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String
  phoneNumber String
  address     String
  position    String
  media       Media?  @relation(fields: [mediaId], references: [id])
  mediaId     String?
}

model Client {
  id                   Int                    @id @default(autoincrement())
  fullName             String
  phoneNumber          String
  address              String
  email                String
  registrationDate     DateTime?
  idCategoryClient     Int
  categoryClient       CategoryClient?        @relation(fields: [idCategoryClient], references: [id])
  purchaseOrder        PurchaseOrder[] // bon de commande 
  salesInvoice         SalesInvoice[] //vente facture
  returnNote           ReturnNote[] // bon de retour ... zaama ya khalil nhotouha return voucher
  estimate             Estimate[] // devis
  salesDeliveryInvoice SalesDeliveryInvoice[] //vente bon de livraison facture
  salesDeliveryNote    SalesDeliveryNote[] // vente bon de livraison
  media                Media?                 @relation(fields: [mediaId], references: [id])
  mediaId              String?
}

model CategoryClient {
  id     Int      @id @default(autoincrement())
  name   String
  client Client[]
}

// Artical models 
model Artical {
  id                 Int      @id @default(autoincrement())
  title              String
  code               String   @unique

  cover              Media?   @relation(fields: [coverId], references: [id])
  pageNumber         Int?
  weight             Float?
  coverId            String?
  shortDescriptionEn String?
  longDescriptionEn  String?
  shortDescriptionAr String?
  longDescriptionAr  String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now()) @updatedAt

  purchaseOrderLine           PurchaseOrderLine[] // bon de commande line 
  ReturnNoteLine               ReturnNoteLine[] // bon de retour line 
  receiptNoteLine             ReceiptNoteLine[] // bon de reception line 
  purchaseDeliveryNoteLine    PurchaseDeliveryNoteLine[] // achat bon de livraison line
  purchaseDeliveryInvoiceLine PurchaseDeliveryInvoiceLine[] // achat bon de livraison facture line 
  purchaseInvoiceLine         PurchaseInvoiceLine[] // achat facture line
  estimateLine                EstimateLine[] // devis line

  salesInvoiceLine         SalesInvoiceLine[] // vente facture line
  salesDeliveryNoteLine    SalesDeliveryNoteLine[] // vente bon de livraison line
  salesDeliveryInvoiceLine SalesDeliveryInvoiceLine[] // vente bon de livraison facture
  transferNoteLine         TransferNoteLine[] // bon de transfere line 
  exitNoteLine             ExitNoteLine[] // bon de sortie line

  articalByAuthor ArticalByAuthor[]

  articalByCategory        ArticalByCategory[]
  articalByPublishingHouse ArticalByPublishingHouse[]
}

model PublishingHouse {
  id                       Int                        @id @default(autoincrement())
  nameAr                   String
  nameEn                   String?
  address                  String?
  logoId                   String?
  logo                     Media?                     @relation(fields: [logoId], references: [id])
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime?                  @updatedAt
  articalByPublishingHouse ArticalByPublishingHouse[]
}

model ArticalByPublishingHouse {
  publishingHouse   PublishingHouse @relation(fields: [publishingHouseId], references: [id])
  publishingHouseId Int
  artical           Artical         @relation(fields: [articalId], references: [id])
  articalId         Int

  @@unique([articalId, publishingHouseId])
}

model Author {
  id              String            @id @default(uuid())
  nameAr          String
  nameEn          String?
  biographyAr     String?
  biographyEn     String?
  mediaId         String?
  ArticalByAuthor ArticalByAuthor[]
  Media           Media?            @relation(fields: [mediaId], references: [id])
}

model ArticalByAuthor {
  artical   Artical @relation(fields: [articalId], references: [id], onDelete: Cascade)
  articalId Int
  author    Author  @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String

  @@unique([authorId, articalId])
}

model CategoryArtical {
  id                Int                 @id @default(autoincrement())
  name              String
  articalByCategory ArticalByCategory[]
}

model ArticalByCategory {
  categoryArtical   CategoryArtical @relation(fields: [categoryarticalId], references: [id])
  categoryarticalId Int
  artical           Artical         @relation(fields: [articalId], references: [id])
  articalId         Int

  @@unique([articalId, categoryarticalId])
}

//canaux de vente
model SalesChannels {
  id     Int    @id @default(autoincrement())
  name    String
  type   String
  region String
  idStock Int

  stock                Stock                  @relation(fields: [idStock], references: [id])
  purchaseOrder        PurchaseOrder[] // bon de commande
  salesInvoice         SalesInvoice[] // vente facture 
  salesDeliveryInvoice SalesDeliveryInvoice[] //vente bon de livraison facture
  salesDeliveryNote    SalesDeliveryNote[] // vente bon de livraison 
}

//bon de reception
model ReceiptNote {
  id                Int                 @id @default(autoincrement())
  receiptDate    DateTime
  numReceiptNote Int 
  typeReceipt    TypeReceipt      @default(achat) // Enum with values "retour" or "achat" or "transfer"

  idProvider    Int?
  idStock          Int
  idReturnNote     Int?
  provider       Provider?        @relation(fields: [idProvider], references: [id])
  stock             Stock?              @relation(fields: [idStock], references: [id])
  returnNote        ReturnNote?         @relation(fields: [idReturnNote], references: [id])
  purchaseDeliveryNote PurchaseDeliveryNote[] // achat bon de livraison
  transferNote       TransferNote[] // bon de transfere
  purchaseDeliveryInvoice    PurchaseDeliveryInvoice[] // achat bon de livraison facture
  purchaseInvoice      PurchaseInvoice[] // achat facture
  receiptNoteLine   ReceiptNoteLine[] // bon de reception line
}

model ReceiptNoteLine {
  id               Int           @id @default(autoincrement())
  idReceiptNote Int
  idArtical       Int
  quantity         Int
  receiptNote    ReceiptNote? @relation(fields: [idReceiptNote], references: [id])
  Artical          Artical?      @relation(fields: [idArtical], references: [id])
}

//achat bon de livraison
model PurchaseDeliveryNote {
  id                       Int                        @id @default(autoincrement())
  idReceiptNote         Int
  deliveryDate            DateTime
  receiptNote            ReceiptNote?              @relation(fields: [idReceiptNote], references: [id])
  purchaseDeliveryNoteLine PurchaseDeliveryNoteLine[]
}

//achat bon de livraison line
model PurchaseDeliveryNoteLine {
  id               Int                @id @default(autoincrement())
  idDeliveryNote Int
  idArtical       Int
  quantity Int 
  purchaseDeliveryNote    PurchaseDeliveryNote? @relation(fields: [idDeliveryNote], references: [id])
  artical          Artical?           @relation(fields: [idArtical], references: [id])
}

// achat bon de livraison facture
model PurchaseDeliveryInvoice {
  id                          Int                           @id @default(autoincrement())
  idReceiptNote            Int
  deliveryDate               DateTime
  receiptNote               ReceiptNote?                 @relation(fields: [idReceiptNote], references: [id])
  purchaseDeliveryInvoiceLine PurchaseDeliveryInvoiceLine[]
}

model PurchaseDeliveryInvoiceLine {
  id            Int             @id @default(autoincrement())
  idDeliveryInvoice Int
  idArtical    Int
  quantity Int 
  purchaseDeliveryInvoice    PurchaseDeliveryInvoice? @relation(fields: [idDeliveryInvoice], references: [id])
  artical       Artical?        @relation(fields: [idArtical], references: [id])
}

//achat facture
model PurchaseInvoice {
  id                  Int                   @id @default(autoincrement())
  deliveryDate       DateTime
  idReceiptNote    Int
  ReceiptNote       ReceiptNote        @relation(fields: [idReceiptNote], references: [id])
  PurchaseInvoiceLine PurchaseInvoiceLine[]
}

model PurchaseInvoiceLine {
  id               Int           @id @default(autoincrement())
  idPurchaseInvoice Int
  idArtical       Int
  quantity Int 
  purchaseInvoice    PurchaseInvoice? @relation(fields: [idPurchaseInvoice], references: [id])
  Artical          Artical?      @relation(fields: [idArtical], references: [id])
}

//vente facture
model SalesInvoice {
  id               Int                @id @default(autoincrement())
  date             DateTime
  idClient        Int
  client           Client             @relation(fields: [idClient], references: [id])
  idPurchaseOrder  Int?
  purchaseOrder     PurchaseOrder?     @relation(fields: [idPurchaseOrder], references: [id])
  saleChannelId    Int
  salesChannels      SalesChannels      @relation(fields: [saleChannelId], references: [id])
  exitNoteId      Int
  exitNote       ExitNote          @relation(fields: [exitNoteId], references: [id])
  salesInvoiceLine SalesInvoiceLine[]
}

model SalesInvoiceLine {
  id             Int           @id @default(autoincrement())
  artical        Artical?      @relation(fields: [articalId], references: [id])
  articalId      Int
  salesInvoice   SalesInvoice? @relation(fields: [salesInvoiceId], references: [id])
  salesInvoiceId Int
  quantity Int 
}

//vente bon de livraison 
model SalesDeliveryNote {
  id              Int      @id @default(autoincrement())
  idClient       Int
  exitNoteId     Int
  deliveryDate   DateTime
  saleChannelId   Int
  idPurchaseOrder Int?

  client                Client                  @relation(fields: [idClient], references: [id])
  exitNote             ExitNote               @relation(fields: [exitNoteId], references: [id])
  salesChannels        SalesChannels           @relation(fields: [saleChannelId], references: [id])
  purchaseOrder         PurchaseOrder?          @relation(fields: [idPurchaseOrder], references: [id])
  salesDeliveryNoteLine SalesDeliveryNoteLine[]
}

model SalesDeliveryNoteLine {
  id Int @id @default(autoincrement())

  salesDeliveryNote   SalesDeliveryNote? @relation(fields: [salesDeliveryNoteId], references: [id])
  salesDeliveryNoteId Int

  artical   Artical? @relation(fields: [articalId], references: [id])
  articalId Int

  quantity Int 
}

//vente bon de livraison facture
model SalesDeliveryInvoice {
  id               Int      @id @default(autoincrement())
  clientId         Int
  exitNoteId      Int   
  deliveryDate     DateTime
  purchaseOrderId  Int?  //bon de commande 
  salesChannelsId Int

  client                   Client                     @relation(fields: [clientId], references: [id])
  exitNote                ExitNote?                 @relation(fields: [exitNoteId], references: [id])
  purchaseOrder            PurchaseOrder?             @relation(fields: [purchaseOrderId], references: [id])
  salesChannels           SalesChannels?             @relation(fields: [salesChannelsId], references: [id])
  salesDeliveryInvoiceLine SalesDeliveryInvoiceLine[]
}

//vente bon de livraison facture line
model SalesDeliveryInvoiceLine {
  id Int @id @default(autoincrement())

  salesDeliveryInvoice   SalesDeliveryInvoice? @relation(fields: [salesDeliveryInvoiceId], references: [id])
  salesDeliveryInvoiceId Int
  artical                Artical?              @relation(fields: [articalId], references: [id])
  articalId              Int

  quantity Int 
}

//bon de commande 
model PurchaseOrder {
  id                   Int                    @id @default(autoincrement())
  idClient            Int
  salesChannelsId       Int
  exitNoteId          Int
  orderDate           DateTime
  date                 DateTime
  client               Client?                @relation(fields: [idClient], references: [id])
  exitNote           ExitNote?             @relation(fields: [exitNoteId], references: [id])
  salesChannels       SalesChannels?         @relation(fields: [salesChannelsId], references: [id])
  salesInvoice         SalesInvoice[]
  salesDeliveryInvoice SalesDeliveryInvoice[]
  purchaseOrderLine    PurchaseOrderLine[]
  salesDeliveryNote    SalesDeliveryNote[]
}

model PurchaseOrderLine {
  id              Int            @id @default(autoincrement())
  idArtical      Int
  idPurchaseOrder Int
  artical         Artical?       @relation(fields: [idArtical], references: [id])
  purchaseOrder    PurchaseOrder? @relation(fields: [idPurchaseOrder], references: [id])

  quantity Int 
}

//bon de retour 
model ReturnNote {
  id            Int             @id @default(autoincrement())
  idClient     Int
  returnDate   DateTime
  client        Client?         @relation(fields: [idClient], references: [id])
  receiptNote  ReceiptNote[]
  returnNoteLine  ReturnNoteLine[]
}


model ReturnNoteLine {
  id            Int         @id @default(autoincrement())
  idArtical    Int
  idReturnNote Int
  artical       Artical?    @relation(fields: [idArtical], references: [id])
  returnNote    ReturnNote? @relation(fields: [idReturnNote], references: [id])

  quantity Int 
}

// devis  :  es2lou khalil 
model Estimate {
  id            Int            @id @default(autoincrement())
  idClient     Int
  totalAmount  Float
  creationDate DateTime
  // date          DateTime
  client        Client?        @relation(fields: [idClient], references: [id])
  EstimateLine  EstimateLine[]
}

model EstimateLine {
  id          Int       @id @default(autoincrement())
  idEstimate Int
  idArtical  Int
  Estimate    Estimate? @relation(fields: [idEstimate], references: [id])
  Artical     Artical?  @relation(fields: [idArtical], references: [id])
}

//bon de transfer 
model TransferNote {
  id               Int                @id @default(autoincrement())
  from             Int
  to               Int
  date             DateTime
  idReceiptNote Int
  idExitNote    Int
  stockFrom       Stock?             @relation(name: "StockFrom", fields: [from], references: [id])
  stockTo         Stock?             @relation(name: "StockTo", fields: [to], references: [id])
  receiptNote    ReceiptNote?      @relation(fields: [idReceiptNote], references: [id])
  exitNote       ExitNote?         @relation(fields: [idExitNote], references: [id])
  transferNoteLine TransferNoteLine[]
}

model TransferNoteLine {
  id            Int          @id @default(autoincrement())
  idArtical    Int
  transferNoteId Int
  artical       Artical?     @relation(fields: [idArtical], references: [id])
  transferNote   TransferNote? @relation(fields: [transferNoteId], references: [id])

  quantity Int 
}

model Stock {
  id                Int             @id @default(autoincrement())
  location          String
  capacity          Int

  //es2lou khalil
  //relation with employee

  transferNoteFrom TransferNote[]   @relation("StockFrom")
  transferNoteTo   TransferNote[]   @relation("StockTo")
  salesChannels    SalesChannels[]
  receiptNote      ReceiptNote[]
  exitNote         ExitNote[]
}

// bon de sortie
model ExitNote {
  id Int @id @default(autoincrement())

  numExitNote Int
  exitDate   DateTime
  stockId       Int

  stock                Stock                  @relation(fields: [stockId], references: [id])
  transferNote          TransferNote[]
  purchaseOrder         PurchaseOrder[]
  salesInvoice         SalesInvoice[]
  salesDeliveryInvoice SalesDeliveryInvoice[]
  exitNoteLine         ExitNoteLine[]
  salesDeliveryNote    SalesDeliveryNote[]
}

model ExitNoteLine {
  id Int @id @default(autoincrement())

  exitNote   ExitNote? @relation(fields: [exitNoteId], references: [id])
  exitNoteId Int?
  Artical     Artical?   @relation(fields: [articalId], references: [id])
  articalId   Int?

  quantity Int 
}


model Provider {
  id                 Int            @id @default(autoincrement())
  nameProvider    String
  phoneNumber       String
  email              String
  adresse            String
  registrationNumber String
  receiptNote       ReceiptNote[]
}

enum TypeReceipt {
  achat
  retour
  transfer
}

//media
model Media {
  id              String            @id @default(uuid())
  path            String
  type            String
  alt             String?
  extension       String?
  description     String?
  user            User[]
  artical         Artical[]
  employee        Employee[]
  publishingHouse PublishingHouse[]
  client          Client[]
  author          Author[]
}
