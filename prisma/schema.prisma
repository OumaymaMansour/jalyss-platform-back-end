generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  Media    Media?  @relation(fields: [mediaId], references: [id])
  mediaId  String?
}

model Employee {
  id           Int     @id @default(autoincrement())
  first_name   String
  last_name    String
  email        String
  phone_number String
  address      String
  position     String
  Media        Media?  @relation(fields: [mediaId], references: [id])
  mediaId      String?
}

model Client {
  id                  Int                 @id @default(autoincrement())
  fullName            String
  phone_number        String
  address             String
  email               String
  registration_date   DateTime
  id_categorie_client Int
  categorie_client    CategoryClient?     @relation(fields: [id_categorie_client], references: [id])
  BonCommande         BonCommande[]
  venteFacture        venteFacture[]
  Bon_retour          Bon_retour[]
  Devis               Devis[]
  VenteBLFacture      VenteBLFacture[]
  VenteBonLivraison   VenteBonLivraison[]
  Media               Media?              @relation(fields: [mediaId], references: [id])
  mediaId             String?
}

model CategoryClient {
  id     Int      @id @default(autoincrement())
  name   String
  Client Client[]
}

// Article models 
model Article {
  id                 Int      @id @default(autoincrement())
  title              String
  cover              Media?   @relation(fields: [coverId], references: [id])
  coverId            String?
  weight             Float?
  pageNumber         Int?
  code               String   @unique
  shortDescriptionEn String?
  longDescriptionEn  String?
  shortDescriptionAr String?
  longDescriptionAr  String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt @default(now())

  BonCommandeLine        BonCommandeLine[]
  ArticleRetour          ArticleRetour[]
  BonReception_Line      BonReception_Line[]
  AchatBonLivraison_Line AchatBonLivraison_Line[]
  AchatBLFacture_Line    AchatBLFacture_Line[]
  AchatFacture_Line      AchatFacture_Line[]
  DevisLine              DevisLine[]

  venteFacture_line      venteFacture_line[]
  VenteBonLivraison_Line VenteBonLivraison_Line[]
  VenteBLFacture_Line    VenteBLFacture_Line[]
  BonTransfer_Line       BonTransfer_Line[]
  BonSortie_line         BonSortie_line[]

  ArticleByAuthor ArticleByAuthor[]

  ArticleByCategory        ArticleByCategory[]
  ArticleByPublishingHouse ArticleByPublishingHouse[]
}

model PublishingHouse {
  id                       Int                     @id @default(autoincrement())
  nameAr                   String
  nameEn                   String?
  address                  String?
  logoId                   String?
  logo                     Media?                     @relation(fields: [logoId], references: [id])
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime?                  @updatedAt
  ArticleByPublishingHouse ArticleByPublishingHouse[]
}

model ArticleByPublishingHouse {
  PublishingHouse   PublishingHouse @relation(fields: [publishingHouseId], references: [id])
  publishingHouseId Int
  Article           Article         @relation(fields: [articleId], references: [id])
  articleId         Int

  @@unique([articleId, publishingHouseId])
}

model Author {
  id              String            @id @default(uuid())
  nameAr          String
  nameEn          String?
  biographyAr     String?
  biographyEn     String?
  ArticleByAuthor ArticleByAuthor[]
}

model ArticleByAuthor {
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId Int
  author    Author  @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String

  @@unique([authorId, articleId])
}

model CategoryArticle {
  id                Int                 @id @default(autoincrement())
  name              String
  ArticleByCategory ArticleByCategory[]
}

model ArticleByCategory {
  CategoryArticle   CategoryArticle @relation(fields: [categoryArticleId], references: [id])
  categoryArticleId Int
  Article           Article         @relation(fields: [articleId], references: [id])
  articleId         Int

  @@unique([articleId, categoryArticleId])
}

model SalesChannels {
  id       Int    @id @default(autoincrement())
  nom      String
  type     String
  region   String
  
  id_stock Int

  stock             Stock               @relation(fields: [id_stock], references: [id])
  BonCommande       BonCommande[]
  venteFacture      venteFacture[]
  VenteBLFacture    VenteBLFacture[]
  VenteBonLivraison VenteBonLivraison[]
}

model BonReception {
  id                Int                 @id @default(autoincrement())
  id_fournisseur    Int?
  id_stock          Int
  id_bon_retour     Int?
  type_reception    type_reception      @default(achat) // Enum with values "retour" or "achat"
  reception_date    DateTime
  fournisseur       Fournisseur?        @relation(fields: [id_fournisseur], references: [id])
  stock             Stock?              @relation(fields: [id_stock], references: [id])
  bon_retour        Bon_retour?         @relation(fields: [id_bon_retour], references: [id])
  AchatBonLivraison AchatBonLivraison[]
  BonTransfer       BonTransfer[]
  AchatBLFacture    AchatBLFacture[]
  AchatFacture      AchatFacture[]
  bonReception_Line BonReception_Line[]
}

model BonReception_Line {
  id               Int           @id @default(autoincrement())
  id_bon_reception Int
  id_article       Int
  quantity         Int
  bon_reception    BonReception? @relation(fields: [id_bon_reception], references: [id])
  article          Article?      @relation(fields: [id_article], references: [id])
}

model AchatBonLivraison {
  id                     Int                      @id @default(autoincrement())
  id_bon_reception       Int
  delivery_date          DateTime
  bon_reception          BonReception?            @relation(fields: [id_bon_reception], references: [id])
  AchatBonLivraison_Line AchatBonLivraison_Line[]
}

model AchatBonLivraison_Line {
  id               Int                @id @default(autoincrement())
  id_bon_livraison Int
  id_article       Int
  bon_livraison    AchatBonLivraison? @relation(fields: [id_bon_livraison], references: [id])
  article          Article?           @relation(fields: [id_article], references: [id])
}

model AchatBLFacture {
  id                  Int                   @id @default(autoincrement())
  id_bon_reception    Int
  delivery_date       DateTime
  bon_reception       BonReception?         @relation(fields: [id_bon_reception], references: [id])
  AchatBLFacture_Line AchatBLFacture_Line[]
}

model AchatBLFacture_Line {
  id            Int             @id @default(autoincrement())
  id_bl_facture Int
  id_article    Int
  bl_facture    AchatBLFacture? @relation(fields: [id_bl_facture], references: [id])
  article       Article?        @relation(fields: [id_article], references: [id])
}

model AchatFacture {
  id                Int                 @id @default(autoincrement())
  id_bon_reception  Int
  delivery_date     DateTime
  bon_reception     BonReception?       @relation(fields: [id_bon_reception], references: [id])
  AchatFacture_Line AchatFacture_Line[]
}

model AchatFacture_Line {
  id               Int           @id @default(autoincrement())
  id_achat_facture Int
  id_article       Int
  achat_facture    AchatFacture? @relation(fields: [id_achat_facture], references: [id])
  article          Article?      @relation(fields: [id_article], references: [id])
}

model venteFacture {
  id                Int                 @id @default(autoincrement())
  date              DateTime
  id_client         Int
  client            Client              @relation(fields: [id_client], references: [id])
  id_bon_commande   Int?
  bon_commande      BonCommande?        @relation(fields: [id_bon_commande], references: [id])
  saleChannelId     Int
  SaleChannel       SalesChannels       @relation(fields: [saleChannelId], references: [id])
  bonSortieId       Int
  bon_sortie        BonSortie           @relation(fields: [bonSortieId], references: [id])
  venteFacture_line venteFacture_line[]
}

model venteFacture_line {
  id             Int           @id @default(autoincrement())
  Article        Article?      @relation(fields: [articleId], references: [id])
  articleId      Int
  venteFacture   venteFacture? @relation(fields: [venteFactureId], references: [id])
  venteFactureId Int
}

model VenteBonLivraison {
  id              Int      @id @default(autoincrement())
  id_client       Int
  bonSortieId     Int
  delivery_date   DateTime
  saleChannelId   Int
  id_bon_commande Int?

  Client                 Client                   @relation(fields: [id_client], references: [id])
  BonSortie              BonSortie                @relation(fields: [bonSortieId], references: [id])
  sales_channels         SalesChannels            @relation(fields: [saleChannelId], references: [id])
  BonCommande            BonCommande?             @relation(fields: [id_bon_commande], references: [id])
  VenteBonLivraison_Line VenteBonLivraison_Line[]
}

model VenteBonLivraison_Line {
  id Int @id @default(autoincrement())

  VenteBonLivraison   VenteBonLivraison? @relation(fields: [venteBonLivraisonId], references: [id])
  venteBonLivraisonId Int

  Article   Article? @relation(fields: [articleId], references: [id])
  articleId Int
}

model VenteBLFacture {
  id               Int      @id @default(autoincrement())
  clientId         Int
  bonSortieId      Int
  deliveryDate     DateTime
  bonCommandeId    Int?
  sales_channelsId Int

  Client              Client                @relation(fields: [clientId], references: [id])
  BonSortie           BonSortie?            @relation(fields: [bonSortieId], references: [id])
  BonCommande         BonCommande?          @relation(fields: [bonCommandeId], references: [id])
  sales_channels      SalesChannels?        @relation(fields: [sales_channelsId], references: [id])
  VenteBLFacture_Line VenteBLFacture_Line[]
}

model VenteBLFacture_Line {
  id Int @id @default(autoincrement())

  VenteBLFacture   VenteBLFacture? @relation(fields: [venteBLFactureId], references: [id])
  venteBLFactureId Int
  Article          Article?        @relation(fields: [articleId], references: [id])
  articleId        Int
}

model BonCommande {
  id                Int                 @id @default(autoincrement())
  id_client         Int
  sales_channels    Int
  bonSortieId       Int
  order_date        DateTime
  date              DateTime
  client            Client?             @relation(fields: [id_client], references: [id])
  bon_sortie        BonSortie?          @relation(fields: [bonSortieId], references: [id])
  canaux_de_vent    SalesChannels?      @relation(fields: [sales_channels], references: [id])
  venteFacture      venteFacture[]
  venteBLFacture    VenteBLFacture[]
  BonCommandeLine   BonCommandeLine[]
  venteBonLivraison VenteBonLivraison[]
}

model BonCommandeLine {
  id              Int          @id @default(autoincrement())
  id_article      Int
  id_bon_commande Int
  article         Article?     @relation(fields: [id_article], references: [id])
  bon_commande    BonCommande? @relation(fields: [id_bon_commande], references: [id])
}

model Bon_retour {
  id            Int             @id @default(autoincrement())
  id_client     Int
  return_date   DateTime
  client        Client?         @relation(fields: [id_client], references: [id])
  BonReception  BonReception[]
  ArticleRetour ArticleRetour[]
}

model Devis {
  id            Int         @id @default(autoincrement())
  id_facture    Int
  id_client     Int
  total_amount  Float
  creation_date DateTime
  date          DateTime
  client        Client?     @relation(fields: [id_client], references: [id])
  DevisLine     DevisLine[]
}

model DevisLine {
  id         Int      @id @default(autoincrement())
  id_devis   Int
  id_article Int
  devis      Devis?   @relation(fields: [id_devis], references: [id])
  article    Article? @relation(fields: [id_article], references: [id])
}

model BonTransfer {
  id               Int                @id @default(autoincrement())
  from             Int
  to               Int
  date             DateTime
  id_bon_reception Int
  id_bondesorti    Int
  stock_from       Stock?             @relation(name: "StockFrom", fields: [from], references: [id])
  stock_to         Stock?             @relation(name: "StockTo", fields: [to], references: [id])
  bon_reception    BonReception?      @relation(fields: [id_bon_reception], references: [id])
  bon_sortie       BonSortie?         @relation(fields: [id_bondesorti], references: [id])
  BonTransfer_Line BonTransfer_Line[]
}

model BonTransfer_Line {
  id            Int          @id @default(autoincrement())
  id_article    Int
  bonTransferId Int
  article       Article?     @relation(fields: [id_article], references: [id])
  BonTransfer   BonTransfer? @relation(fields: [bonTransferId], references: [id])
}

model Stock {
  id                Int             @id @default(autoincrement())
  location          String
  capacity          Int
  bon_transfer_from BonTransfer[]   @relation("StockFrom")
  bon_transfer_to   BonTransfer[]   @relation("StockTo")
  sales_channels    SalesChannels[]
  BonReception      BonReception[]
  bonSortie         BonSortie[]
}

model BonSortie {
  id Int @id @default(autoincrement())

  num_bonSortie Int
  sortie_date   DateTime
  stockId       Int

  BonTransfer       BonTransfer[]
  bon_commande      BonCommande[]
  venteFacture      venteFacture[]
  VenteBLFacture    VenteBLFacture[]
  BonSortie_line    BonSortie_line[]
  VenteBonLivraison VenteBonLivraison[]
  Stock             Stock               @relation(fields: [stockId], references: [id])
}

model BonSortie_line {
  id Int @id @default(autoincrement())

  BonSortie   BonSortie? @relation(fields: [bonSortieId], references: [id])
  bonSortieId Int?
  Article     Article?   @relation(fields: [articleId], references: [id])
  articleId   Int?
}

model ArticleRetour {
  id            Int         @id @default(autoincrement())
  id_article    Int
  id_bon_retour Int
  article       Article?    @relation(fields: [id_article], references: [id])
  bon_retour    Bon_retour? @relation(fields: [id_bon_retour], references: [id])
}

model Fournisseur {
  id                 Int            @id @default(autoincrement())
  nom_fournisseur    String
  phone_number       String
  email              String
  adresse            String
  registrationNumber String
  BonReception       BonReception[]
}

enum type_reception {
  achat
  retour
}

//media
model Media {
  id              String            @id @default(uuid())
  path            String
  type            String
  alt             String?
  extension       String?
  description     String?
  User            User[]
  Article         Article[]
  Employee        Employee[]
  PublishingHouse PublishingHouse[]
  Client          Client[]
}
